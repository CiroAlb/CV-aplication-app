unction LaboralExperience(props) {
  const [laboralExperienceForm, setLaboralExperienceForm] = useState(
    props.experience || {
      companyName: "",
      ciudad: "",
      dateStart: "",
      dateEnd: "",
      jobDescription: "",
    }
  );

  const handleChange = (e) => {
    const { name, value } = e.target;
    setLaboralExperienceForm((prevState) => ({ ...prevState, [name]: value }));
  };

  return (
    <div className="wrap">
      <label htmlFor="companyName" className="label-form">
        company name
        <input
          type="text"
          name="companyName"
          value={laboralExperienceForm.companyName}
          onChange={handleChange}
        />
      </label>
      <label htmlFor="ciudad" className="label-form">
        city
        <input
          type="text"
          name="ciudad"
          value={laboralExperienceForm.ciudad}
          onChange={handleChange}
        />
      </label>
      <label htmlFor="dateStart" className="label-form">
        date start
        <input
          type="date"
          name="dateStart"
          value={laboralExperienceForm.dateStart}
          onChange={handleChange}
        />
      </label>
      <label htmlFor="dateEnd" className="label-form">
        date end
        <input
          type="date"
          name="dateEnd"
          value={laboralExperienceForm.dateEnd}
          onChange={handleChange}
        />
      </label>
      <label htmlFor="jobDescription" className="label-form">
        job description
        <textarea
          name="jobDescription"
          rows={4}
          cols={40}
          value={laboralExperienceForm.jobDescription}
          onChange={handleChange}
        />
      </label>
    </div>
  );
}

function Education(props) {
  const [educationForm, setEducationForm] = useState(
    props.education || {
      educationType: "",
      date: "",
      place: "",
      institution: "",
    }
  );

  const handleChange = (e) => {
    const { name, value } = e.target;
    setEducationForm((prevState) => ({ ...prevState, [name]: value }));
  };

  return (
    <div className="wrap">
      <label htmlFor="educationType" className="label-form">
        Type Education{" "}
        <select
          name="educationType"
          value={educationForm.educationType}
          onChange={handleChange}
        >
          <option value="Select">Select</option>
          <option value="University">University</option>
          <option value="Secundaria">High School</option>
          <option value="Primaria">Elementary School</option>
        </select>
      </label>
      <label htmlFor="educationDate" className="label-form">
        Date{" "}
        <input
          type="date"
          name="educationDate"
          value={educationForm.date}
          onChange={handleChange}
        />
      </label>
      <label htmlFor="place" className="label-form">
        Place
        <input
          type="text"
          name="place"
          value={educationForm.place}
          onChange={handleChange}
        />
      </label>
      <label htmlFor="institution" className="label-form">
        institution
        <input
          type="text"
          name="institution"
          value={educationForm.institution}
          onChange={handleChange}
        />
      </label>
    </div>
  );
}


{/* <LaboralExperience
              experience={obj}
              key={obj.companyName + obj.id}
            ></LaboralExperience> */}


            <Education
              education={obj}
              key={obj.institution + obj.id}
            ></Education>